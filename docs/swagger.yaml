definitions:
  models.BalanceRequest:
    properties:
      amount:
        type: number
      wallet_id:
        type: string
    required:
    - amount
    - wallet_id
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.Transfer:
    properties:
      createdAt:
        type: string
      id:
        type: string
      payeeID:
        type: string
      payerID:
        type: string
      value:
        type: number
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      document:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      userType:
        type: string
    type: object
  models.Wallet:
    properties:
      balance:
        type: number
      createdAt:
        type: string
      id:
        type: string
      userID:
        type: string
    type: object
info:
  contact: {}
paths:
  /transfers:
    post:
      consumes:
      - application/json
      description: Transfers a specified amount from the payer to the payee
      parameters:
      - description: Transaction details
        in: body
        name: transfer
        required: true
        schema:
          $ref: '#/definitions/models.Transfer'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Transfer'
        "400":
          description: Invalid input or transfer error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Transfer funds between users
      tags:
      - transferss
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user with the provided email and password
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Cannot parse JSON or missing email/password
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new user
      tags:
      - users
  /wallets:
    post:
      consumes:
      - application/json
      description: Create a new wallet for a user
      parameters:
      - description: User ID (UUID format)
        in: body
        name: user_id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Wallet'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new wallet
      tags:
      - wallets
  /wallets/{user_id}:
    get:
      consumes:
      - application/json
      description: Get a wallet by user ID
      parameters:
      - description: User ID (UUID format)
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Wallet'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get wallet by user ID
      tags:
      - wallets
  /wallets/deposit:
    post:
      consumes:
      - application/json
      description: Adds a specified amount of balance to the wallet identified by
        WalletID.
      parameters:
      - description: Balance Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.BalanceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated wallet information
          schema:
            $ref: '#/definitions/models.Wallet'
        "400":
          description: Invalid input data or request body
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Deposit some amount to wallet
      tags:
      - wallets
  /wallets/withdraw:
    post:
      consumes:
      - application/json
      description: Withdraw a specified amount from a wallet
      parameters:
      - description: Withdrawal request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.BalanceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated wallet after withdrawal
          schema:
            $ref: '#/definitions/models.Wallet'
        "400":
          description: Invalid input data or request body
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Withdraw from wallet
      tags:
      - wallets
swagger: "2.0"
